- Refactor file handling
- Add the error/warning number to output, also refactor error reporting a little bit
- Added tests
- Using InputPosition for token creation actions
- Fixed a bug during lexing (sometimes reading too much input when creating a token)
- Modelled transitions better
- Implemented indirect transitions (transitions on every symbol but the given ones)
- Added the opportunity for token actions to return errors
- Reformatted using rustfmt
- Started implementing grammars
- Created grammar creation macros
- Finished grammars
- Converted grammars to parsers
- Added abstract syntax tree creation methods
- Moved to a parsing table only approach for the parser (no speparate DFA anymore)
- Made the lexer language independent (except for error reporting)
- Made lexer error reporting language independent
- Made lexer testing language independent
- Better documented the reg_exp macro
- Added basic error reporting to parsing
- Extended error reporting
- Added tests for the parser
- Made the AST better typechecked by extracting statements and expressions as separate enums
- Changed from direct references to file handles to Arcs to decrease verbosity
- Added a Locatable-trait to be able to specify that things can be located in the input
